\chap Description of Workplace and of the Software

\label[sec:workplace]
\sec Workplace

\secc Manipulator

The base is~composed of~two robotic manipulator arm Motoman~MA1400. First arm is~called as~"r1" (or~also~appears like "R1"). Second arm is similarly marked "r2"~("R2"). The arms "r1" and "r2" are placed on~the~turntable. The turntable is rotated about an~axis known as~"external axis" (or~"Ext." or~possibly as~axis~"13"). Location of~arms and rotating around the~"Ext."~axis can be~better seen from (figure~\ref[fig:motomanAndTable]). 

\midinsert \clabel[fig:cturobot]{Manipulator of CloPeMa project}
\picw=8cm \cinspic pictures/robotCTU-eps-converted-to.pdf
\caption/f Manipulator of CloPeMa project location at CTU
\endinsert

Each arm of~manipulator has 6~rotation axes. The~axes are labeled according to the manufacturer with the~letters "S", "L", "U", "R", "T" and~"B"~(figure~\ref[fig:motomanAxis]). This is description of single the arm of robot. Numeral is added to identify the arms e.g. "S"~axis located on~the~arm~"r1" will be~called "S1", etc. Similarly to~the~designation of~arms we can meet even using small letters~(eg.:~"s1").

\medskip \clabel[fig:motomanAndTable]{Identification of arms}
\picw=9cm \cinspic pictures/motomanCelek-eps-converted-to.pdf
\caption/f Identification of arms and location of external axis.
\medskip

\medskip \clabel[fig:motomanAxis]{Description of manipulator}
\picw=9cm \cinspic pictures/motomanMA1400axis-eps-converted-to.pdf
\caption/f Description of robotic arm Motoman~MA1400 - axis.
\medskip


\eject

\secc End Effector

Each of~arms "r1" and "r2" are ended with eletricly controlled grippers (figure~\ref[fig:gripper]). Grippers are designed for~grasping garment.
The prototype of gripper was developed especialy for CloPeMa project by the University of Genoa. The gripper is composed of two flexible fingers. Flexible fingers are used for lifting garments from the table. Gripper has a tactile sensor at the ''finger tips'' to sense the garment material using little rubbing motions between the ''gripper finger''~\cite[clopema]. 


\medskip \clabel[fig:gripper]{Gripper}
\picw=8cm \cinspic pictures/gripperXtion-eps-converted-to.pdf
\caption/f End effector (gripper). a)~gripper, b)~sensor Asus Xtion, c)~end of~arm on~which the~gripper is mounted.
\medskip


\label[secc:camera]
\secc Sensors %Camcorder

The robot has been setup with a variety of sensors:
\begitems \style X
	* Robot Binocular-Vision Head	
		\begitems \style x
			* The robot head comprises two Nikon D5100 DSLR cameras. The cameras are mounted on pan and tilt units. The head provides the robot system with high resolution 3D points clouds~\cite[clopema].
		\enditems
	* Photometric Stereo Gripper-Mounted Sensor
		\begitems \style x
			* The photometric stereo sensor is a small scale close range stereo-pair camera sensor. The sensors captures at 1280$\times$800~px resolution and has software support to do 3D reconstruction of close-range garment surface~\cite[clopema].			
		\enditems
	* Wrist Force-Torque Sensor
		\begitems \style x
			* ATI Mini45 FT six-axis force/torque sensor is integrated in the wrist of one gripper. It is used to sense for contact of the gripper with table and for feedback for the robot system when stretching out a held-up piece of clothing~\cite[clopema].
		\enditems
	* Xtions
		\begitems \style x
			* Asus Xtion Pro Live sensor is~able~to~record RGB~images and depth maps. The robot has two to three these sensors --- one on the each arm~\cite[clopema]. \mind{Rozvést montáž!}
		\enditems
\enditems
Xtion sensor is for our purposes the most suitable. Xtion has sufficient rosolution of RGB image and depth map. In addition, Xtion has a sufficient number of frames per second (compared to slower stereo-pair).
Xtion mounted on~the~arm~"r1" is~called "xtion1" and Xtion mounted on~the~arm~"r2" is~called "xtion2". Position of~cameras is~shown in~figure~\ref[fig:gripper].



\sec Software

Robot is operated using Robot Operating System (ROS). ROS is an open-source system. ROS is not an operating system in the traditional sense of process management and scheduling. Rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster~\cite[quigley2009ros]. In CloPeMa project is used Ubuntu (Debian-based Linux OS) as a host operating system.


\label[secc:rosintro]
\secc Robot Operating System 

A system built using ROS consists of a number of processes, potentially on a number of different hosts, connected at runtime in a P2P topology. The fundamental concepts of the ROS implementation are {\bf nodes}, {\bf messages}, {\bf topics}, and {\bf services}. 

{\bf Nodes} are processes that perform computation. ROS is designed to be modular. A system is typically comprised of many nodes. In this context, the term ''node'' is interchangable with ''software module''. Nodes communicate with each other by passing messages. A {\bf message} is a a strictly typed data structure. Standard primitive types (integer, floating point, boolean, etc.) are supported. Arrays of primitive types and constants are supported too. Messages can be composed of other messages, and arrays of other messages, nested arbitrarily deep. A node sends a message by publishing it to a given {\bf topic}. A node that is interested in a certain kind of data will subscribe to the appropriate topic. There may be multiple concurrent publishers and subscribers for a single topic, and a single node may publish and/or subscribe to multiple topics. In general, publishers and subscribers are not aware of each others existence~\cite[quigley2009ros].

Although the topic-based publish-subscribe model is a flexible communications paradigm, its ''broadcast'' routing scheme is not appropriate for synchronous transactions, which can simplify the design of some nodes. In ROS, we call this a {\bf service}, defined by a string name and a pair of strictly typed messages: one for the request and one for the response~\cite[quigley2009ros].

In the ROS are designed a large number of tools e.g. for get and set configuration parameters, for plotting or visualisation. For this project is important a {\bf rosbag tool}. This is basucally a set of tools for recording from and playing back to ROS topics~\cite[rosbag]. With help of this tool we can record
all or just some chosen topics. 
The chosen topics are passed like parameters to the rosbag tool. The rosbag tool records all published messages from chosen topics, including timestamp.
  The tool stores timestamped messages to a specially formatted "*.bag" file (also "bagfile" or "rosbag-file"). The rosbag tool can later replay these messages from rosbag file too. 












